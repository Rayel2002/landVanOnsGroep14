{
    "openapi": "3.0.0",
    "info": {
        "title": "Event Land van ons",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Show All Events",
                "description": "Returns list of events",
                "operationId": "showEvents",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a Events",
                "operationId": "createEvent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_name": {
                                        "type": "string",
                                        "example": "Updated event"
                                    },
                                    "begin_time": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "street_name": {
                                        "type": "string",
                                        "example": "street name"
                                    },
                                    "house_number": {
                                        "type": "string",
                                        "example": "Updated house_number"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "Updated postal code"
                                    },
                                    "amount_of_volunteers_needed": {
                                        "type": "number",
                                        "example": 5
                                    },
                                    "descriptipn": {
                                        "type": "string",
                                        "example": "Updated description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "201": {
                        "description": "Successful created"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Show Event",
                "description": "Return a event by given id",
                "operationId": "showEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update Events",
                "description": "Return a event by given id",
                "operationId": "updateEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_name": {
                                        "type": "string",
                                        "example": "Updated event"
                                    },
                                    "begin_time": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "street_name": {
                                        "type": "string",
                                        "example": "Updated event"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Deleting Event",
                "description": "Return a event by given id",
                "operationId": "deleteEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}